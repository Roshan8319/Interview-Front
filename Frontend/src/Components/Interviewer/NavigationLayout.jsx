import * as React from "react";
import { useState, useEffect, useRef } from "react";
import {
  NavLink,
  Link,
  useLocation,
  useNavigate,
  Outlet,
} from "react-router-dom";
import { styled, useTheme } from "@mui/material/styles";
import Box from "@mui/material/Box";
import AppBar from "@mui/material/AppBar";
import Drawer from "@mui/material/Drawer";
import MuiDrawer from "@mui/material/Drawer";
import MuiAppBar from "@mui/material/AppBar";
import Toolbar from "@mui/material/Toolbar";
import List from "@mui/material/List";
import CssBaseline from "@mui/material/CssBaseline";
import Typography from "@mui/material/Typography";
import Divider from "@mui/material/Divider";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import ChevronLeftIcon from "@mui/icons-material/ChevronLeft";
import ChevronRightIcon from "@mui/icons-material/ChevronRight";
import ListItem from "@mui/material/ListItem";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import ListItemText from "@mui/material/ListItemText";
import Cookies from 'js-cookie';
import Profile from "../../assets/ProfileIcon.png";
import Switch from '@mui/material/Switch';
import FormControlLabel from '@mui/material/FormControlLabel';
import Dialog from '@mui/material/Dialog';
import DialogActions from '@mui/material/DialogActions';
import DialogContent from '@mui/material/DialogContent';
import DialogContentText from '@mui/material/DialogContentText';
import DialogTitle from '@mui/material/DialogTitle';
import Button from '@mui/material/Button';
import CloseIcon from "@mui/icons-material/Close";
import CheckCircleIcon from "@mui/icons-material/CheckCircle";
import DoNotDisturbIcon from "@mui/icons-material/DoNotDisturb";
import VisitorIndicator from "../Hooks/VisitorIndicator";
import Recrumeta from "../../assets/Recrumeta.png";

const CustomSwitch = styled(Switch)(({ theme }) => ({
  '& .MuiSwitch-switchBase': {
    color: '#E65F2B',
    '&.Mui-checked': {
      color: '#4CAF50',
      '& + .MuiSwitch-track': {
        backgroundColor: '#4CAF50',
        opacity: 0.5,
      },
    },
  },
  '& .MuiSwitch-track': {
    backgroundColor: '#E65F2B',
    opacity: 0.5,
  },
}));

const StatusDialog = styled(Dialog)(({ theme }) => ({
  "& .MuiDialogContent-root": {
    padding: theme.spacing(2),
  },
  "& .MuiDialogActions-root": {
    padding: theme.spacing(1),
  },
  "& .MuiDialog-paper": {
    width: "400px",
    maxWidth: "95%",
    borderRadius: "1rem",
    backgroundColor: "#F2EAE5",
  },
}));

const drawerWidth = 240;

const DrawerHeader = styled("div")(({ theme }) => ({
  display: "flex",
  alignItems: "center",
  justifyContent: "flex-end",
  padding: theme.spacing(0, 1),
  // necessary for content to be below app bar
  ...theme.mixins.toolbar,
}));

const DashboardIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M13.0347 2.03437C13.6674 1.40163 14.5607 1.14551 15.5833 1.14551H17.4167C18.4393 1.14551 19.3326 1.40163 19.9653 2.03437C20.5981 2.66711 20.8542 3.56037 20.8542 4.58301V6.41634C20.8542 7.43898 20.5981 8.33224 19.9653 8.96498C19.3326 9.59772 18.4393 9.85384 17.4167 9.85384H15.5833C14.5607 9.85384 13.6674 9.59772 13.0347 8.96498C12.402 8.33224 12.1458 7.43898 12.1458 6.41634V4.58301C12.1458 3.56037 12.402 2.66711 13.0347 2.03437ZM14.007 3.00664C13.7231 3.29057 13.5208 3.77232 13.5208 4.58301V6.41634C13.5208 7.22703 13.7231 7.70878 14.007 7.9927C14.2909 8.27663 14.7727 8.47884 15.5833 8.47884H17.4167C18.2274 8.47884 18.7091 8.27663 18.993 7.9927C19.277 7.70878 19.4792 7.22703 19.4792 6.41634V4.58301C19.4792 3.77232 19.277 3.29057 18.993 3.00664C18.7091 2.72272 18.2274 2.52051 17.4167 2.52051H15.5833C14.7727 2.52051 14.2909 2.72272 14.007 3.00664Z" fill="#FFFFFF" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M2.03471 13.0344C2.66745 12.4016 3.5607 12.1455 4.58334 12.1455H6.41668C7.43932 12.1455 8.33257 12.4016 8.96531 13.0344C9.59805 13.6671 9.85418 14.5604 9.85418 15.583V17.4163C9.85418 18.439 9.59805 19.3322 8.96531 19.965C8.33257 20.5977 7.43932 20.8538 6.41668 20.8538H4.58334C3.5607 20.8538 2.66745 20.5977 2.03471 19.965C1.40197 19.3322 1.14584 18.439 1.14584 17.4163V15.583C1.14584 14.5604 1.40197 13.6671 2.03471 13.0344ZM3.00698 14.0066C2.72305 14.2906 2.52084 14.7723 2.52084 15.583V17.4163C2.52084 18.227 2.72305 18.7088 3.00698 18.9927C3.29091 19.2766 3.77265 19.4788 4.58334 19.4788H6.41668C7.22737 19.4788 7.70911 19.2766 7.99304 18.9927C8.27697 18.7088 8.47918 18.227 8.47918 17.4163V15.583C8.47918 14.7723 8.27697 14.2906 7.99304 14.0066C7.70911 13.7227 7.22737 13.5205 6.41668 13.5205H4.58334C3.77265 13.5205 3.29091 13.7227 3.00698 14.0066Z" fill="#FFFFFF" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M5.50001 2.52051C3.85466 2.52051 2.52084 3.85433 2.52084 5.49967C2.52084 7.14502 3.85466 8.47884 5.50001 8.47884C7.14536 8.47884 8.47918 7.14502 8.47918 5.49967C8.47918 3.85433 7.14536 2.52051 5.50001 2.52051ZM1.14584 5.49967C1.14584 3.09493 3.09527 1.14551 5.50001 1.14551C7.90475 1.14551 9.85418 3.09493 9.85418 5.49967C9.85418 7.90441 7.90475 9.85384 5.50001 9.85384C3.09527 9.85384 1.14584 7.90441 1.14584 5.49967Z" fill="#FFFFFF" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M16.5 13.5205C14.8547 13.5205 13.5208 14.8543 13.5208 16.4997C13.5208 18.145 14.8547 19.4788 16.5 19.4788C18.1454 19.4788 19.4792 18.145 19.4792 16.4997C19.4792 14.8543 18.1454 13.5205 16.5 13.5205ZM12.1458 16.4997C12.1458 14.0949 14.0953 12.1455 16.5 12.1455C18.9047 12.1455 20.8542 14.0949 20.8542 16.4997C20.8542 18.9044 18.9047 20.8538 16.5 20.8538C14.0953 20.8538 12.1458 18.9044 12.1458 16.4997Z" fill="#FFFFFF" />
  </svg>

);
const ActiveDashboardIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M13.0347 2.03437C13.6674 1.40163 14.5607 1.14551 15.5833 1.14551H17.4167C18.4393 1.14551 19.3326 1.40163 19.9653 2.03437C20.5981 2.66711 20.8542 3.56037 20.8542 4.58301V6.41634C20.8542 7.43898 20.5981 8.33224 19.9653 8.96498C19.3326 9.59772 18.4393 9.85384 17.4167 9.85384H15.5833C14.5607 9.85384 13.6674 9.59772 13.0347 8.96498C12.402 8.33224 12.1458 7.43898 12.1458 6.41634V4.58301C12.1458 3.56037 12.402 2.66711 13.0347 2.03437ZM14.007 3.00664C13.7231 3.29057 13.5208 3.77232 13.5208 4.58301V6.41634C13.5208 7.22703 13.7231 7.70878 14.007 7.9927C14.2909 8.27663 14.7727 8.47884 15.5833 8.47884H17.4167C18.2274 8.47884 18.7091 8.27663 18.993 7.9927C19.277 7.70878 19.4792 7.22703 19.4792 6.41634V4.58301C19.4792 3.77232 19.277 3.29057 18.993 3.00664C18.7091 2.72272 18.2274 2.52051 17.4167 2.52051H15.5833C14.7727 2.52051 14.2909 2.72272 14.007 3.00664Z" fill="#E65F2B" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M2.03471 13.0344C2.66745 12.4016 3.5607 12.1455 4.58334 12.1455H6.41668C7.43932 12.1455 8.33257 12.4016 8.96531 13.0344C9.59805 13.6671 9.85418 14.5604 9.85418 15.583V17.4163C9.85418 18.439 9.59805 19.3322 8.96531 19.965C8.33257 20.5977 7.43932 20.8538 6.41668 20.8538H4.58334C3.5607 20.8538 2.66745 20.5977 2.03471 19.965C1.40197 19.3322 1.14584 18.439 1.14584 17.4163V15.583C1.14584 14.5604 1.40197 13.6671 2.03471 13.0344ZM3.00698 14.0066C2.72305 14.2906 2.52084 14.7723 2.52084 15.583V17.4163C2.52084 18.227 2.72305 18.7088 3.00698 18.9927C3.29091 19.2766 3.77265 19.4788 4.58334 19.4788H6.41668C7.22737 19.4788 7.70911 19.2766 7.99304 18.9927C8.27697 18.7088 8.47918 18.227 8.47918 17.4163V15.583C8.47918 14.7723 8.27697 14.2906 7.99304 14.0066C7.70911 13.7227 7.22737 13.5205 6.41668 13.5205H4.58334C3.77265 13.5205 3.29091 13.7227 3.00698 14.0066Z" fill="#E65F2B" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M5.50001 2.52051C3.85466 2.52051 2.52084 3.85433 2.52084 5.49967C2.52084 7.14502 3.85466 8.47884 5.50001 8.47884C7.14536 8.47884 8.47918 7.14502 8.47918 5.49967C8.47918 3.85433 7.14536 2.52051 5.50001 2.52051ZM1.14584 5.49967C1.14584 3.09493 3.09527 1.14551 5.50001 1.14551C7.90475 1.14551 9.85418 3.09493 9.85418 5.49967C9.85418 7.90441 7.90475 9.85384 5.50001 9.85384C3.09527 9.85384 1.14584 7.90441 1.14584 5.49967Z" fill="#E65F2B" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M16.5 13.5205C14.8547 13.5205 13.5208 14.8543 13.5208 16.4997C13.5208 18.145 14.8547 19.4788 16.5 19.4788C18.1454 19.4788 19.4792 18.145 19.4792 16.4997C19.4792 14.8543 18.1454 13.5205 16.5 13.5205ZM12.1458 16.4997C12.1458 14.0949 14.0953 12.1455 16.5 12.1455C18.9047 12.1455 20.8542 14.0949 20.8542 16.4997C20.8542 18.9044 18.9047 20.8538 16.5 20.8538C14.0953 20.8538 12.1458 18.9044 12.1458 16.4997Z" fill="#E65F2B" />
  </svg>
);

const ProfileIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M2.75 4.8125C2.75 4.26549 2.9673 3.74089 3.35409 3.35409C3.74089 2.9673 4.26549 2.75 4.8125 2.75H6.1875C6.36984 2.75 6.5447 2.67757 6.67364 2.54864C6.80257 2.4197 6.875 2.24484 6.875 2.0625C6.875 1.88016 6.80257 1.7053 6.67364 1.57636C6.5447 1.44743 6.36984 1.375 6.1875 1.375H4.8125C3.90082 1.375 3.02648 1.73716 2.38182 2.38182C1.73716 3.02648 1.375 3.90082 1.375 4.8125V6.1875C1.375 6.36984 1.44743 6.5447 1.57636 6.67364C1.7053 6.80257 1.88016 6.875 2.0625 6.875C2.24484 6.875 2.4197 6.80257 2.54864 6.67364C2.67757 6.5447 2.75 6.36984 2.75 6.1875V4.8125ZM4.34637 19.1978C4.49763 19.2326 4.653 19.25 4.8125 19.25H6.1875C6.36984 19.25 6.5447 19.3224 6.67364 19.4514C6.80257 19.5803 6.875 19.7552 6.875 19.9375C6.875 20.1198 6.80257 20.2947 6.67364 20.4236C6.5447 20.5526 6.36984 20.625 6.1875 20.625H4.8125C3.90082 20.625 3.02648 20.2628 2.38182 19.6182C1.73716 18.9735 1.375 18.0992 1.375 17.1875V15.8125C1.375 15.6302 1.44743 15.4553 1.57636 15.3264C1.7053 15.1974 1.88016 15.125 2.0625 15.125C2.24484 15.125 2.4197 15.1974 2.54864 15.3264C2.67757 15.4553 2.75 15.6302 2.75 15.8125V17.1875C2.74975 17.6537 2.90743 18.1062 3.19733 18.4712C3.48724 18.8363 3.89226 19.0924 4.34637 19.1978ZM17.1875 2.75C17.7345 2.75 18.2591 2.9673 18.6459 3.35409C19.0327 3.74089 19.25 4.26549 19.25 4.8125V6.1875C19.25 6.36984 19.3224 6.5447 19.4514 6.67364C19.5803 6.80257 19.7552 6.875 19.9375 6.875C20.1198 6.875 20.2947 6.80257 20.4236 6.67364C20.5526 6.5447 20.625 6.36984 20.625 6.1875V4.8125C20.625 3.90082 20.2628 3.02648 19.6182 2.38182C18.9735 1.73716 18.0992 1.375 17.1875 1.375H15.8125C15.6302 1.375 15.4553 1.44743 15.3264 1.57636C15.1974 1.7053 15.125 1.88016 15.125 2.0625C15.125 2.24484 15.1974 2.4197 15.3264 2.54864C15.4553 2.67757 15.6302 2.75 15.8125 2.75H17.1875ZM17.6536 19.1978C17.5007 19.2328 17.3444 19.2504 17.1875 19.25H15.8125C15.6302 19.25 15.4553 19.3224 15.3264 19.4514C15.1974 19.5803 15.125 19.7552 15.125 19.9375C15.125 20.1198 15.1974 20.2947 15.3264 20.4236C15.4553 20.5526 15.6302 20.625 15.8125 20.625H17.1875C18.0992 20.625 18.9735 20.2628 19.6182 19.6182C20.2628 18.9735 20.625 18.0992 20.625 17.1875V15.8125C20.625 15.6302 20.5526 15.4553 20.4236 15.3264C20.2947 15.1974 20.1198 15.125 19.9375 15.125C19.7552 15.125 19.5803 15.1974 19.4514 15.3264C19.3224 15.4553 19.25 15.6302 19.25 15.8125V17.1875C19.2503 17.6537 19.0926 18.1062 18.8027 18.4712C18.5128 18.8363 18.1077 19.0924 17.6536 19.1978ZM4.8125 17.875C4.63016 17.875 4.4553 17.8026 4.32636 17.6736C4.19743 17.5447 4.125 17.3698 4.125 17.1875C4.125 16.6405 4.3423 16.1159 4.72909 15.7291C5.11589 15.3423 5.64049 15.125 6.1875 15.125H15.8125C16.3595 15.125 16.8841 15.3423 17.2709 15.7291C17.6577 16.1159 17.875 16.6405 17.875 17.1875C17.875 17.3698 17.8026 17.5447 17.6736 17.6736C17.5447 17.8026 17.3698 17.875 17.1875 17.875H16.5V17.1875C16.5 17.0052 16.4276 16.8303 16.2986 16.7014C16.1697 16.5724 15.9948 16.5 15.8125 16.5H6.1875C6.00516 16.5 5.8303 16.5724 5.70136 16.7014C5.57243 16.8303 5.5 17.0052 5.5 17.1875V17.875H4.8125ZM14.7812 9.28125C14.7812 8.2784 14.3829 7.31662 13.6737 6.6075C12.9646 5.89838 12.0028 5.5 11 5.5C9.99715 5.5 9.03537 5.89838 8.32625 6.6075C7.61713 7.31662 7.21875 8.2784 7.21875 9.28125C7.21875 10.2841 7.61713 11.2459 8.32625 11.955C9.03537 12.6641 9.99715 13.0625 11 13.0625C12.0028 13.0625 12.9646 12.6641 13.6737 11.955C14.3829 11.2459 14.7812 10.2841 14.7812 9.28125ZM8.59375 9.28125C8.59375 8.64307 8.84727 8.03103 9.29852 7.57977C9.74978 7.12852 10.3618 6.875 11 6.875C11.6382 6.875 12.2502 7.12852 12.7015 7.57977C13.1527 8.03103 13.4062 8.64307 13.4062 9.28125C13.4062 9.91943 13.1527 10.5315 12.7015 10.9827C12.2502 11.434 11.6382 11.6875 11 11.6875C10.3618 11.6875 9.74978 11.434 9.29852 10.9827C8.84727 10.5315 8.59375 9.91943 8.59375 9.28125Z" fill="white" />
  </svg>

);
const ActiveProfileIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M2.75 4.8125C2.75 4.26549 2.9673 3.74089 3.35409 3.35409C3.74089 2.9673 4.26549 2.75 4.8125 2.75H6.1875C6.36984 2.75 6.5447 2.67757 6.67364 2.54864C6.80257 2.4197 6.875 2.24484 6.875 2.0625C6.875 1.88016 6.80257 1.7053 6.67364 1.57636C6.5447 1.44743 6.36984 1.375 6.1875 1.375H4.8125C3.90082 1.375 3.02648 1.73716 2.38182 2.38182C1.73716 3.02648 1.375 3.90082 1.375 4.8125V6.1875C1.375 6.36984 1.44743 6.5447 1.57636 6.67364C1.7053 6.80257 1.88016 6.875 2.0625 6.875C2.24484 6.875 2.4197 6.80257 2.54864 6.67364C2.67757 6.5447 2.75 6.36984 2.75 6.1875V4.8125ZM4.34637 19.1978C4.49763 19.2326 4.653 19.25 4.8125 19.25H6.1875C6.36984 19.25 6.5447 19.3224 6.67364 19.4514C6.80257 19.5803 6.875 19.7552 6.875 19.9375C6.875 20.1198 6.80257 20.2947 6.67364 20.4236C6.5447 20.5526 6.36984 20.625 6.1875 20.625H4.8125C3.90082 20.625 3.02648 20.2628 2.38182 19.6182C1.73716 18.9735 1.375 18.0992 1.375 17.1875V15.8125C1.375 15.6302 1.44743 15.4553 1.57636 15.3264C1.7053 15.1974 1.88016 15.125 2.0625 15.125C2.24484 15.125 2.4197 15.1974 2.54864 15.3264C2.67757 15.4553 2.75 15.6302 2.75 15.8125V17.1875C2.74975 17.6537 2.90743 18.1062 3.19733 18.4712C3.48724 18.8363 3.89226 19.0924 4.34637 19.1978ZM17.1875 2.75C17.7345 2.75 18.2591 2.9673 18.6459 3.35409C19.0327 3.74089 19.25 4.26549 19.25 4.8125V6.1875C19.25 6.36984 19.3224 6.5447 19.4514 6.67364C19.5803 6.80257 19.7552 6.875 19.9375 6.875C20.1198 6.875 20.2947 6.80257 20.4236 6.67364C20.5526 6.5447 20.625 6.36984 20.625 6.1875V4.8125C20.625 3.90082 20.2628 3.02648 19.6182 2.38182C18.9735 1.73716 18.0992 1.375 17.1875 1.375H15.8125C15.6302 1.375 15.4553 1.44743 15.3264 1.57636C15.1974 1.7053 15.125 1.88016 15.125 2.0625C15.125 2.24484 15.1974 2.4197 15.3264 2.54864C15.4553 2.67757 15.6302 2.75 15.8125 2.75H17.1875ZM17.6536 19.1978C17.5007 19.2328 17.3444 19.2504 17.1875 19.25H15.8125C15.6302 19.25 15.4553 19.3224 15.3264 19.4514C15.1974 19.5803 15.125 19.7552 15.125 19.9375C15.125 20.1198 15.1974 20.2947 15.3264 20.4236C15.4553 20.5526 15.6302 20.625 15.8125 20.625H17.1875C18.0992 20.625 18.9735 20.2628 19.6182 19.6182C20.2628 18.9735 20.625 18.0992 20.625 17.1875V15.8125C20.625 15.6302 20.5526 15.4553 20.4236 15.3264C20.2947 15.1974 20.1198 15.125 19.9375 15.125C19.7552 15.125 19.5803 15.1974 19.4514 15.3264C19.3224 15.4553 19.25 15.6302 19.25 15.8125V17.1875C19.2503 17.6537 19.0926 18.1062 18.8027 18.4712C18.5128 18.8363 18.1077 19.0924 17.6536 19.1978ZM4.8125 17.875C4.63016 17.875 4.4553 17.8026 4.32636 17.6736C4.19743 17.5447 4.125 17.3698 4.125 17.1875C4.125 16.6405 4.3423 16.1159 4.72909 15.7291C5.11589 15.3423 5.64049 15.125 6.1875 15.125H15.8125C16.3595 15.125 16.8841 15.3423 17.2709 15.7291C17.6577 16.1159 17.875 16.6405 17.875 17.1875C17.875 17.3698 17.8026 17.5447 17.6736 17.6736C17.5447 17.8026 17.3698 17.875 17.1875 17.875H16.5V17.1875C16.5 17.0052 16.4276 16.8303 16.2986 16.7014C16.1697 16.5724 15.9948 16.5 15.8125 16.5H6.1875C6.00516 16.5 5.8303 16.5724 5.70136 16.7014C5.57243 16.8303 5.5 17.0052 5.5 17.1875V17.875H4.8125ZM14.7812 9.28125C14.7812 8.2784 14.3829 7.31662 13.6737 6.6075C12.9646 5.89838 12.0028 5.5 11 5.5C9.99715 5.5 9.03537 5.89838 8.32625 6.6075C7.61713 7.31662 7.21875 8.2784 7.21875 9.28125C7.21875 10.2841 7.61713 11.2459 8.32625 11.955C9.03537 12.6641 9.99715 13.0625 11 13.0625C12.0028 13.0625 12.9646 12.6641 13.6737 11.955C14.3829 11.2459 14.7812 10.2841 14.7812 9.28125ZM8.59375 9.28125C8.59375 8.64307 8.84727 8.03103 9.29852 7.57977C9.74978 7.12852 10.3618 6.875 11 6.875C11.6382 6.875 12.2502 7.12852 12.7015 7.57977C13.1527 8.03103 13.4062 8.64307 13.4062 9.28125C13.4062 9.91943 13.1527 10.5315 12.7015 10.9827C12.2502 11.434 11.6382 11.6875 11 11.6875C10.3618 11.6875 9.74978 11.434 9.29852 10.9827C8.84727 10.5315 8.59375 9.91943 8.59375 9.28125Z" fill="#E65F2B" />
  </svg>

);
const CalendarIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M15.5833 12.8333C15.8264 12.8333 16.0596 12.7368 16.2315 12.5648C16.4034 12.3929 16.5 12.1598 16.5 11.9167C16.5 11.6736 16.4034 11.4404 16.2315 11.2685C16.0596 11.0966 15.8264 11 15.5833 11C15.3402 11 15.1071 11.0966 14.9352 11.2685C14.7632 11.4404 14.6667 11.6736 14.6667 11.9167C14.6667 12.1598 14.7632 12.3929 14.9352 12.5648C15.1071 12.7368 15.3402 12.8333 15.5833 12.8333ZM15.5833 16.5C15.8264 16.5 16.0596 16.4034 16.2315 16.2315C16.4034 16.0596 16.5 15.8264 16.5 15.5833C16.5 15.3402 16.4034 15.1071 16.2315 14.9352C16.0596 14.7632 15.8264 14.6667 15.5833 14.6667C15.3402 14.6667 15.1071 14.7632 14.9352 14.9352C14.7632 15.1071 14.6667 15.3402 14.6667 15.5833C14.6667 15.8264 14.7632 16.0596 14.9352 16.2315C15.1071 16.4034 15.3402 16.5 15.5833 16.5ZM11.9167 11.9167C11.9167 12.1598 11.8201 12.3929 11.6482 12.5648C11.4763 12.7368 11.2431 12.8333 11 12.8333C10.7569 12.8333 10.5237 12.7368 10.3518 12.5648C10.1799 12.3929 10.0833 12.1598 10.0833 11.9167C10.0833 11.6736 10.1799 11.4404 10.3518 11.2685C10.5237 11.0966 10.7569 11 11 11C11.2431 11 11.4763 11.0966 11.6482 11.2685C11.8201 11.4404 11.9167 11.6736 11.9167 11.9167ZM11.9167 15.5833C11.9167 15.8264 11.8201 16.0596 11.6482 16.2315C11.4763 16.4034 11.2431 16.5 11 16.5C10.7569 16.5 10.5237 16.4034 10.3518 16.2315C10.1799 16.0596 10.0833 15.8264 10.0833 15.5833C10.0833 15.3402 10.1799 15.1071 10.3518 14.9352C10.5237 14.7632 10.7569 14.6667 11 14.6667C11.2431 14.6667 11.4763 14.7632 11.6482 14.9352C11.8201 15.1071 11.9167 15.3402 11.9167 15.5833ZM6.41667 12.8333C6.65978 12.8333 6.89294 12.7368 7.06485 12.5648C7.23676 12.3929 7.33333 12.1598 7.33333 11.9167C7.33333 11.6736 7.23676 11.4404 7.06485 11.2685C6.89294 11.0966 6.65978 11 6.41667 11C6.17355 11 5.94039 11.0966 5.76849 11.2685C5.59658 11.4404 5.5 11.6736 5.5 11.9167C5.5 12.1598 5.59658 12.3929 5.76849 12.5648C5.94039 12.7368 6.17355 12.8333 6.41667 12.8333ZM6.41667 16.5C6.65978 16.5 6.89294 16.4034 7.06485 16.2315C7.23676 16.0596 7.33333 15.8264 7.33333 15.5833C7.33333 15.3402 7.23676 15.1071 7.06485 14.9352C6.89294 14.7632 6.65978 14.6667 6.41667 14.6667C6.17355 14.6667 5.94039 14.7632 5.76849 14.9352C5.59658 15.1071 5.5 15.3402 5.5 15.5833C5.5 15.8264 5.59658 16.0596 5.76849 16.2315C5.94039 16.4034 6.17355 16.5 6.41667 16.5Z" fill="white" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M6.41668 1.60449C6.59901 1.60449 6.77388 1.67693 6.90281 1.80586C7.03174 1.93479 7.10418 2.10966 7.10418 2.29199V2.99141C7.71101 2.97949 8.37926 2.97949 9.11443 2.97949H12.8847C13.6208 2.97949 14.289 2.97949 14.8958 2.99141V2.29199C14.8958 2.10966 14.9683 1.93479 15.0972 1.80586C15.2261 1.67693 15.401 1.60449 15.5833 1.60449C15.7657 1.60449 15.9405 1.67693 16.0695 1.80586C16.1984 1.93479 16.2708 2.10966 16.2708 2.29199V3.05008C16.5092 3.06841 16.735 3.09163 16.9483 3.11974C18.0226 3.26458 18.8925 3.56891 19.5791 4.25458C20.2648 4.94116 20.5691 5.81108 20.7139 6.88541C20.8542 7.93041 20.8542 9.26416 20.8542 10.949V12.885C20.8542 14.5698 20.8542 15.9045 20.7139 16.9486C20.5691 18.0229 20.2648 18.8928 19.5791 19.5794C18.8925 20.2651 18.0226 20.5694 16.9483 20.7142C15.9033 20.8545 14.5695 20.8545 12.8847 20.8545H9.11626C7.43143 20.8545 6.09676 20.8545 5.05268 20.7142C3.97834 20.5694 3.10843 20.2651 2.42184 19.5794C1.73618 18.8928 1.43184 18.0229 1.28701 16.9486C1.14676 15.9036 1.14676 14.5698 1.14676 12.885V10.949C1.14676 9.26416 1.14676 7.92949 1.28701 6.88541C1.43184 5.81108 1.73618 4.94116 2.42184 4.25458C3.10843 3.56891 3.97834 3.26458 5.05268 3.11974C5.26657 3.09163 5.49237 3.06841 5.73009 3.05008V2.29199C5.73009 2.10981 5.8024 1.93509 5.93113 1.80618C6.05987 1.67728 6.2345 1.60474 6.41668 1.60449ZM5.23418 4.48283C4.31293 4.60658 3.78126 4.83941 3.39351 5.22716C3.00576 5.61491 2.77293 6.14658 2.64918 7.06783C2.6284 7.22366 2.61068 7.38835 2.59601 7.56191H19.404C19.3893 7.38835 19.3716 7.22335 19.3508 7.06691C19.2271 6.14566 18.9943 5.61399 18.6065 5.22624C18.2188 4.83849 17.6871 4.60566 16.7649 4.48191C15.8235 4.35541 14.5814 4.35358 12.8333 4.35358H9.16668C7.41859 4.35358 6.17743 4.35633 5.23418 4.48283ZM2.52084 11.0003C2.52084 10.2175 2.52084 9.53641 2.53276 8.93783H19.4673C19.4792 9.53641 19.4792 10.2175 19.4792 11.0003V12.8337C19.4792 14.5817 19.4773 15.8238 19.3508 16.7662C19.2271 17.6874 18.9943 18.2191 18.6065 18.6068C18.2188 18.9946 17.6871 19.2274 16.7649 19.3512C15.8235 19.4777 14.5814 19.4795 12.8333 19.4795H9.16668C7.41859 19.4795 6.17743 19.4777 5.23418 19.3512C4.31293 19.2274 3.78126 18.9946 3.39351 18.6068C3.00576 18.2191 2.77293 17.6874 2.64918 16.7652C2.52268 15.8238 2.52084 14.5817 2.52084 12.8337V11.0003Z" fill="white" />
  </svg>

);
const ActiveCalendarIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M15.5833 12.8333C15.8264 12.8333 16.0596 12.7368 16.2315 12.5648C16.4034 12.3929 16.5 12.1598 16.5 11.9167C16.5 11.6736 16.4034 11.4404 16.2315 11.2685C16.0596 11.0966 15.8264 11 15.5833 11C15.3402 11 15.1071 11.0966 14.9352 11.2685C14.7632 11.4404 14.6667 11.6736 14.6667 11.9167C14.6667 12.1598 14.7632 12.3929 14.9352 12.5648C15.1071 12.7368 15.3402 12.8333 15.5833 12.8333ZM15.5833 16.5C15.8264 16.5 16.0596 16.4034 16.2315 16.2315C16.4034 16.0596 16.5 15.8264 16.5 15.5833C16.5 15.3402 16.4034 15.1071 16.2315 14.9352C16.0596 14.7632 15.8264 14.6667 15.5833 14.6667C15.3402 14.6667 15.1071 14.7632 14.9352 14.9352C14.7632 15.1071 14.6667 15.3402 14.6667 15.5833C14.6667 15.8264 14.7632 16.0596 14.9352 16.2315C15.1071 16.4034 15.3402 16.5 15.5833 16.5ZM11.9167 11.9167C11.9167 12.1598 11.8201 12.3929 11.6482 12.5648C11.4763 12.7368 11.2431 12.8333 11 12.8333C10.7569 12.8333 10.5237 12.7368 10.3518 12.5648C10.1799 12.3929 10.0833 12.1598 10.0833 11.9167C10.0833 11.6736 10.1799 11.4404 10.3518 11.2685C10.5237 11.0966 10.7569 11 11 11C11.2431 11 11.4763 11.0966 11.6482 11.2685C11.8201 11.4404 11.9167 11.6736 11.9167 11.9167ZM11.9167 15.5833C11.9167 15.8264 11.8201 16.0596 11.6482 16.2315C11.4763 16.4034 11.2431 16.5 11 16.5C10.7569 16.5 10.5237 16.4034 10.3518 16.2315C10.1799 16.0596 10.0833 15.8264 10.0833 15.5833C10.0833 15.3402 10.1799 15.1071 10.3518 14.9352C10.5237 14.7632 10.7569 14.6667 11 14.6667C11.2431 14.6667 11.4763 14.7632 11.6482 14.9352C11.8201 15.1071 11.9167 15.3402 11.9167 15.5833ZM6.41667 12.8333C6.65978 12.8333 6.89294 12.7368 7.06485 12.5648C7.23676 12.3929 7.33333 12.1598 7.33333 11.9167C7.33333 11.6736 7.23676 11.4404 7.06485 11.2685C6.89294 11.0966 6.65978 11 6.41667 11C6.17355 11 5.94039 11.0966 5.76849 11.2685C5.59658 11.4404 5.5 11.6736 5.5 11.9167C5.5 12.1598 5.59658 12.3929 5.76849 12.5648C5.94039 12.7368 6.17355 12.8333 6.41667 12.8333ZM6.41667 16.5C6.65978 16.5 6.89294 16.4034 7.06485 16.2315C7.23676 16.0596 7.33333 15.8264 7.33333 15.5833C7.33333 15.3402 7.23676 15.1071 7.06485 14.9352C6.89294 14.7632 6.65978 14.6667 6.41667 14.6667C6.17355 14.6667 5.94039 14.7632 5.76849 14.9352C5.59658 15.1071 5.5 15.3402 5.5 15.5833C5.5 15.8264 5.59658 16.0596 5.76849 16.2315C5.94039 16.4034 6.17355 16.5 6.41667 16.5Z" fill="#E65F2B" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M6.41668 1.60449C6.59901 1.60449 6.77388 1.67693 6.90281 1.80586C7.03174 1.93479 7.10418 2.10966 7.10418 2.29199V2.99141C7.71101 2.97949 8.37926 2.97949 9.11443 2.97949H12.8847C13.6208 2.97949 14.289 2.97949 14.8958 2.99141V2.29199C14.8958 2.10966 14.9683 1.93479 15.0972 1.80586C15.2261 1.67693 15.401 1.60449 15.5833 1.60449C15.7657 1.60449 15.9405 1.67693 16.0695 1.80586C16.1984 1.93479 16.2708 2.10966 16.2708 2.29199V3.05008C16.5092 3.06841 16.735 3.09163 16.9483 3.11974C18.0226 3.26458 18.8925 3.56891 19.5791 4.25458C20.2648 4.94116 20.5691 5.81108 20.7139 6.88541C20.8542 7.93041 20.8542 9.26416 20.8542 10.949V12.885C20.8542 14.5698 20.8542 15.9045 20.7139 16.9486C20.5691 18.0229 20.2648 18.8928 19.5791 19.5794C18.8925 20.2651 18.0226 20.5694 16.9483 20.7142C15.9033 20.8545 14.5695 20.8545 12.8847 20.8545H9.11626C7.43143 20.8545 6.09676 20.8545 5.05268 20.7142C3.97834 20.5694 3.10843 20.2651 2.42184 19.5794C1.73618 18.8928 1.43184 18.0229 1.28701 16.9486C1.14676 15.9036 1.14676 14.5698 1.14676 12.885V10.949C1.14676 9.26416 1.14676 7.92949 1.28701 6.88541C1.43184 5.81108 1.73618 4.94116 2.42184 4.25458C3.10843 3.56891 3.97834 3.26458 5.05268 3.11974C5.26657 3.09163 5.49237 3.06841 5.73009 3.05008V2.29199C5.73009 2.10981 5.8024 1.93509 5.93113 1.80618C6.05987 1.67728 6.2345 1.60474 6.41668 1.60449ZM5.23418 4.48283C4.31293 4.60658 3.78126 4.83941 3.39351 5.22716C3.00576 5.61491 2.77293 6.14658 2.64918 7.06783C2.6284 7.22366 2.61068 7.38835 2.59601 7.56191H19.404C19.3893 7.38835 19.3716 7.22335 19.3508 7.06691C19.2271 6.14566 18.9943 5.61399 18.6065 5.22624C18.2188 4.83849 17.6871 4.60566 16.7649 4.48191C15.8235 4.35541 14.5814 4.35358 12.8333 4.35358H9.16668C7.41859 4.35358 6.17743 4.35633 5.23418 4.48283ZM2.52084 11.0003C2.52084 10.2175 2.52084 9.53641 2.53276 8.93783H19.4673C19.4792 9.53641 19.4792 10.2175 19.4792 11.0003V12.8337C19.4792 14.5817 19.4773 15.8238 19.3508 16.7662C19.2271 17.6874 18.9943 18.2191 18.6065 18.6068C18.2188 18.9946 17.6871 19.2274 16.7649 19.3512C15.8235 19.4777 14.5814 19.4795 12.8333 19.4795H9.16668C7.41859 19.4795 6.17743 19.4777 5.23418 19.3512C4.31293 19.2274 3.78126 18.9946 3.39351 18.6068C3.00576 18.2191 2.77293 17.6874 2.64918 16.7652C2.52268 15.8238 2.52084 14.5817 2.52084 12.8337V11.0003Z" fill="#E65F2B" />
  </svg>

);
const ReceivablesIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.2211 11.6387C14.064 11.1941 13.7728 10.8092 13.3878 10.537C13.0028 10.2648 12.5429 10.1187 12.0714 10.1187V9.54883H10.9316V10.1187C10.327 10.1187 9.74713 10.3589 9.31961 10.7864C8.89209 11.2139 8.65192 11.7938 8.65192 12.3984C8.65192 13.003 8.89209 13.5828 9.31961 14.0103C9.74713 14.4379 10.327 14.678 10.9316 14.678V16.9577C10.4357 16.9577 10.0134 16.6414 9.85614 16.198C9.8328 16.1254 9.79515 16.0583 9.74542 16.0006C9.69569 15.9428 9.63489 15.8957 9.5666 15.8618C9.49832 15.828 9.42395 15.8082 9.34788 15.8036C9.27182 15.7991 9.1956 15.8098 9.12375 15.8352C9.05191 15.8605 8.98588 15.9001 8.92957 15.9514C8.87327 16.0028 8.82784 16.0649 8.79596 16.1341C8.76408 16.2033 8.74641 16.2782 8.74399 16.3544C8.74157 16.4306 8.75444 16.5064 8.78186 16.5775C8.93899 17.0221 9.23011 17.407 9.61511 17.6792C10.0001 17.9514 10.46 18.0976 10.9316 18.0975V18.6674H12.0714V18.0975C12.676 18.0975 13.2558 17.8573 13.6833 17.4298C14.1109 17.0023 14.351 16.4225 14.351 15.8179C14.351 15.2133 14.1109 14.6334 13.6833 14.2059C13.2558 13.7784 12.676 13.5382 12.0714 13.5382V11.2586C12.3071 11.2585 12.5371 11.3315 12.7295 11.4676C12.922 11.6036 13.0676 11.796 13.1462 12.0183C13.1966 12.1608 13.3015 12.2775 13.4378 12.3427C13.5054 12.375 13.5786 12.3936 13.6533 12.3976C13.7281 12.4016 13.8029 12.3908 13.8734 12.3659C13.944 12.341 14.009 12.3024 14.0647 12.2524C14.1203 12.2023 14.1656 12.1418 14.1979 12.0743C14.2302 12.0068 14.2488 11.9335 14.2528 11.8588C14.2568 11.7841 14.246 11.7093 14.2211 11.6387ZM10.9316 11.2586C10.6293 11.2586 10.3393 11.3787 10.1256 11.5924C9.91183 11.8062 9.79174 12.0961 9.79174 12.3984C9.79174 12.7007 9.91183 12.9906 10.1256 13.2044C10.3393 13.4181 10.6293 13.5382 10.9316 13.5382V11.2586ZM12.0714 16.9577C12.3737 16.9577 12.6636 16.8376 12.8774 16.6238C13.0911 16.4101 13.2112 16.1202 13.2112 15.8179C13.2112 15.5156 13.0911 15.2256 12.8774 15.0119C12.6636 14.7981 12.3737 14.678 12.0714 14.678V16.9577Z" fill="white" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M5.31965 2.49374C6.71821 1.80927 9.01268 1 11.5237 1C13.9823 1 16.2164 1.77565 17.6075 2.45099L17.6862 2.48918C18.1056 2.69663 18.4441 2.89268 18.6824 3.05168L16.5771 6.1292C21.4305 11.0909 25.1794 21.5151 11.5237 21.5151C-2.13194 21.5151 1.51606 11.2801 6.4116 6.1292L4.32003 3.05168C4.48131 2.94625 4.68591 2.82372 4.92983 2.69378C5.05065 2.62881 5.18059 2.56175 5.31965 2.49374ZM15.2241 6.08874L16.9094 3.62501C15.3421 3.73785 13.4774 4.10602 11.6821 4.62578C10.3998 4.99622 8.97506 4.9398 7.65572 4.69645C7.32323 4.63489 6.99305 4.56151 6.66578 4.47646L7.76001 6.0876C10.1052 6.92252 12.8784 6.92252 15.2241 6.08874ZM7.10177 7.05816C9.84589 8.11819 13.144 8.1182 15.8881 7.05702C17.0332 8.26473 17.9914 9.63686 18.7308 11.1279C19.5013 12.6997 19.9208 14.271 19.8524 15.6251C19.7863 16.9319 19.2722 18.0483 18.0982 18.8781C16.8746 19.7427 14.8167 20.3753 11.5231 20.3753C8.2262 20.3753 6.15856 19.7535 4.92356 18.8986C3.741 18.0797 3.22181 16.978 3.14829 15.6889C3.07135 14.3496 3.48169 12.7863 4.24936 11.2037C4.98169 9.69457 6.00355 8.24187 7.10177 7.05816ZM6.44637 3.23177C6.9023 3.36741 7.37874 3.48538 7.86203 3.57486C9.08734 3.80055 10.3161 3.8336 11.3647 3.52984C12.5867 3.1737 13.8296 2.89372 15.0862 2.6915C14.0376 2.37577 12.8111 2.13982 11.5231 2.13982C9.55979 2.13982 7.72867 2.68751 6.44637 3.23177Z" fill="white" />
  </svg>

);
const ActiveReceivablesIcon = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.2211 11.6387C14.064 11.1941 13.7728 10.8092 13.3878 10.537C13.0028 10.2648 12.5429 10.1187 12.0714 10.1187V9.54883H10.9316V10.1187C10.327 10.1187 9.74713 10.3589 9.31961 10.7864C8.89209 11.2139 8.65192 11.7938 8.65192 12.3984C8.65192 13.003 8.89209 13.5828 9.31961 14.0103C9.74713 14.4379 10.327 14.678 10.9316 14.678V16.9577C10.4357 16.9577 10.0134 16.6414 9.85614 16.198C9.8328 16.1254 9.79515 16.0583 9.74542 16.0006C9.69569 15.9428 9.63489 15.8957 9.5666 15.8618C9.49832 15.828 9.42395 15.8082 9.34788 15.8036C9.27182 15.7991 9.1956 15.8098 9.12375 15.8352C9.05191 15.8605 8.98588 15.9001 8.92957 15.9514C8.87327 16.0028 8.82784 16.0649 8.79596 16.1341C8.76408 16.2033 8.74641 16.2782 8.74399 16.3544C8.74157 16.4306 8.75444 16.5064 8.78186 16.5775C8.93899 17.0221 9.23011 17.407 9.61511 17.6792C10.0001 17.9514 10.46 18.0976 10.9316 18.0975V18.6674H12.0714V18.0975C12.676 18.0975 13.2558 17.8573 13.6833 17.4298C14.1109 17.0023 14.351 16.4225 14.351 15.8179C14.351 15.2133 14.1109 14.6334 13.6833 14.2059C13.2558 13.7784 12.676 13.5382 12.0714 13.5382V11.2586C12.3071 11.2585 12.5371 11.3315 12.7295 11.4676C12.922 11.6036 13.0676 11.796 13.1462 12.0183C13.1966 12.1608 13.3015 12.2775 13.4378 12.3427C13.5054 12.375 13.5786 12.3936 13.6533 12.3976C13.7281 12.4016 13.8029 12.3908 13.8734 12.3659C13.944 12.341 14.009 12.3024 14.0647 12.2524C14.1203 12.2023 14.1656 12.1418 14.1979 12.0743C14.2302 12.0068 14.2488 11.9335 14.2528 11.8588C14.2568 11.7841 14.246 11.7093 14.2211 11.6387ZM10.9316 11.2586C10.6293 11.2586 10.3393 11.3787 10.1256 11.5924C9.91183 11.8062 9.79174 12.0961 9.79174 12.3984C9.79174 12.7007 9.91183 12.9906 10.1256 13.2044C10.3393 13.4181 10.6293 13.5382 10.9316 13.5382V11.2586ZM12.0714 16.9577C12.3737 16.9577 12.6636 16.8376 12.8774 16.6238C13.0911 16.4101 13.2112 16.1202 13.2112 15.8179C13.2112 15.5156 13.0911 15.2256 12.8774 15.0119C12.6636 14.7981 12.3737 14.678 12.0714 14.678V16.9577Z" fill="#E65F2B" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M5.31965 2.49374C6.71821 1.80927 9.01268 1 11.5237 1C13.9823 1 16.2164 1.77565 17.6075 2.45099L17.6862 2.48918C18.1056 2.69663 18.4441 2.89268 18.6824 3.05168L16.5771 6.1292C21.4305 11.0909 25.1794 21.5151 11.5237 21.5151C-2.13194 21.5151 1.51606 11.2801 6.4116 6.1292L4.32003 3.05168C4.48131 2.94625 4.68591 2.82372 4.92983 2.69378C5.05065 2.62881 5.18059 2.56175 5.31965 2.49374ZM15.2241 6.08874L16.9094 3.62501C15.3421 3.73785 13.4774 4.10602 11.6821 4.62578C10.3998 4.99622 8.97506 4.9398 7.65572 4.69645C7.32323 4.63489 6.99305 4.56151 6.66578 4.47646L7.76001 6.0876C10.1052 6.92252 12.8784 6.92252 15.2241 6.08874ZM7.10177 7.05816C9.84589 8.11819 13.144 8.1182 15.8881 7.05702C17.0332 8.26473 17.9914 9.63686 18.7308 11.1279C19.5013 12.6997 19.9208 14.271 19.8524 15.6251C19.7863 16.9319 19.2722 18.0483 18.0982 18.8781C16.8746 19.7427 14.8167 20.3753 11.5231 20.3753C8.2262 20.3753 6.15856 19.7535 4.92356 18.8986C3.741 18.0797 3.22181 16.978 3.14829 15.6889C3.07135 14.3496 3.48169 12.7863 4.24936 11.2037C4.98169 9.69457 6.00355 8.24187 7.10177 7.05816ZM6.44637 3.23177C6.9023 3.36741 7.37874 3.48538 7.86203 3.57486C9.08734 3.80055 10.3161 3.8336 11.3647 3.52984C12.5867 3.1737 13.8296 2.89372 15.0862 2.6915C14.0376 2.37577 12.8111 2.13982 11.5231 2.13982C9.55979 2.13982 7.72867 2.68751 6.44637 3.23177Z" fill="#E65F2B" />
  </svg>

);
const InterviewHistory = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11 2.52051C6.31971 2.52051 2.52084 6.31937 2.52084 10.9997C2.52084 15.68 6.31971 19.4788 11 19.4788C15.6803 19.4788 19.4792 15.68 19.4792 10.9997C19.4792 6.31937 15.6803 2.52051 11 2.52051ZM1.14584 10.9997C1.14584 5.55998 5.56031 1.14551 11 1.14551C16.4397 1.14551 20.8542 5.55998 20.8542 10.9997C20.8542 16.4394 16.4397 20.8538 11 20.8538C5.56031 20.8538 1.14584 16.4394 1.14584 10.9997Z" fill="white" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M10.6609 6.19629C11.0406 6.19629 11.3484 6.50409 11.3484 6.88379V10.6421C11.3484 10.7829 11.4021 10.9869 11.5216 11.1964C11.6411 11.406 11.7893 11.556 11.9097 11.6273L11.9115 11.6284L11.9115 11.6284L14.7532 13.3243C15.0792 13.5188 15.1858 13.9409 14.9912 14.2669C14.7966 14.593 14.3746 14.6996 14.0485 14.505L11.2087 12.8102C11.2084 12.8101 11.2081 12.8099 11.2077 12.8097C10.8336 12.5877 10.5329 12.2383 10.3272 11.8776C10.1213 11.5165 9.97336 11.0789 9.97336 10.6421V6.88379C9.97336 6.50409 10.2812 6.19629 10.6609 6.19629Z" fill="white" />
  </svg>

);
const ActiveInterviewHistory = () => (
  <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11 2.52051C6.31971 2.52051 2.52084 6.31937 2.52084 10.9997C2.52084 15.68 6.31971 19.4788 11 19.4788C15.6803 19.4788 19.4792 15.68 19.4792 10.9997C19.4792 6.31937 15.6803 2.52051 11 2.52051ZM1.14584 10.9997C1.14584 5.55998 5.56031 1.14551 11 1.14551C16.4397 1.14551 20.8542 5.55998 20.8542 10.9997C20.8542 16.4394 16.4397 20.8538 11 20.8538C5.56031 20.8538 1.14584 16.4394 1.14584 10.9997Z" fill="#E65F2B" />
    <path fill-rule="evenodd" clip-rule="evenodd" d="M10.6609 6.19629C11.0406 6.19629 11.3484 6.50409 11.3484 6.88379V10.6421C11.3484 10.7829 11.4021 10.9869 11.5216 11.1964C11.6411 11.406 11.7893 11.556 11.9097 11.6273L11.9115 11.6284L11.9115 11.6284L14.7532 13.3243C15.0792 13.5188 15.1858 13.9409 14.9912 14.2669C14.7966 14.593 14.3746 14.6996 14.0485 14.505L11.2087 12.8102C11.2084 12.8101 11.2081 12.8099 11.2077 12.8097C10.8336 12.5877 10.5329 12.2383 10.3272 11.8776C10.1213 11.5165 9.97336 11.0789 9.97336 10.6421V6.88379C9.97336 6.50409 10.2812 6.19629 10.6609 6.19629Z" fill="#E65F2B" />
  </svg>

);

const navItems = [
  {
    text: "Dashboard",
    icon: <DashboardIcon />,
    icon2: <ActiveDashboardIcon />,
    link: "/interviewer/dashboard",
  },
  {
    text: "Profile",
    icon: <ProfileIcon />,
    icon2: <ActiveProfileIcon />,
    link: "/interviewer/profile",
  },
  {
    text: "Calendar",
    icon: <CalendarIcon />,
    icon2: <ActiveCalendarIcon />,
    link: "/interviewer/calendar",
  },
  {
    text: "Receivables",
    icon: <ReceivablesIcon />,
    icon2: <ActiveReceivablesIcon />,
    link: "/interviewer/receivables",
  },
  {
    text: "Interview History",
    icon: <InterviewHistory />,
    icon2: <ActiveInterviewHistory />,
    link: "/interviewer/interview-history",
  },

];

function NavigationLayout() {
  const theme = useTheme();
  const [open, setOpen] = React.useState(true);
  const [isActive, setIsActive] = useState(true);
  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);
  const navigate = useNavigate();
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const dropdownRef = useRef(null);

  const handleDrawerOpen = () => {
    setOpen(true);
  };

  const handleDrawerClose = () => {
    setOpen(false);
  };

  const openedMixinStyle = {
    width: drawerWidth,
    transition: theme.transitions.create("width", {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
    overflowX: "hidden",
  };

  const closedMixinStyle = {
    transition: theme.transitions.create("width", {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
    overflowX: "hidden",
    width: `calc(${theme.spacing(7)} + 1px)`,
    [theme.breakpoints.up("sm")]: {
      width: `calc(${theme.spacing(8)} + 1px)`,
    },
  };

  const drawerHeaderStyle = {
    display: "flex",
    alignItems: "center",
    justifyContent: open ? "space-between" : "center",
    padding: theme.spacing(0, 1),
    ...theme.mixins.toolbar,
  };

  const appBarStyle = {
    zIndex: theme.zIndex.drawer + 1,
    transition: theme.transitions.create(["width", "margin"], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.leavingScreen,
    }),
    width: {
      xs: '100%', // Full width on mobile
      sm: '100%', // Full width on small tablets
      md: open ? `calc(100% - ${drawerWidth}px)` : `calc(100% - ${theme.spacing(8)})`
    },
    marginLeft: {
      xs: 0, // No margin on mobile
      sm: 0, // No margin on small tablets
      md: open ? drawerWidth : 0
    },
  };

  const drawerStyle = {
    width: drawerWidth,
    flexShrink: 0,
    whiteSpace: "nowrap",
    boxSizing: "border-box",
    backgroundColor: "#000000",
    display: { xs: 'none', md: 'block' }, // Hide on mobile/small tablets
    ...(open ? openedMixinStyle : closedMixinStyle),
    "& .MuiDrawer-paper": {
      ...(open ? openedMixinStyle : closedMixinStyle),
      backgroundColor: "#000000",
      display: { xs: 'none', md: 'block' }, // Hide on mobile/small tablets
    },
  };

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setIsDropdownOpen(false);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  const toggleDropdown = () => {
    setIsDropdownOpen(!isDropdownOpen);
  };

  const closeDropdown = () => {
    setIsDropdownOpen(false);
  };

  const handleStatusToggle = () => {
    if (isActive) {
      // If currently active, show confirmation dialog before becoming inactive
      setConfirmDialogOpen(true);
    } else {
      // If currently inactive, directly become active with no confirmation needed
      setIsActive(true);
      // Add API call here to update status
    }
  };

  const location = useLocation();

  const handleConfirmInactive = () => {
    // User confirmed they want to be inactive
    setIsActive(false);
    setConfirmDialogOpen(false);
    // Add API call here to update status
  };

  const handleCancelInactive = () => {
    // User canceled the inactive status change
    setConfirmDialogOpen(false);
  };

  const [username, setUsername] = useState("");
  useEffect(() => {
    const storedUsername = sessionStorage.getItem("displayName");

    if (storedUsername) {
      setUsername(storedUsername);
    }
  }, []);

  const handleLogOut = async () => {

    Cookies.remove("accessToken");
    Cookies.remove("refreshToken");
    sessionStorage.removeItem("displayName");

    navigate("/auth/signin");
  }


  return (
    <Box sx={{ display: "flex" }}>
      <CssBaseline />
      {/* AppBar - Top Nav Bar */}
      <AppBar position="fixed" sx={{ ...appBarStyle, backgroundColor: "#EBDFD7", height: "64px" }} >
        <div className="flex items-center justify-between h-full">
          {/* Logo section - SVG for mobile, image for tablets */}
          <div className="flex items-center ml-2 mt-2">
            {/* SVG Logo - Only visible on small screens up to 640px */}
            <div className="flex items-center sm:hidden -mt-2">
              <svg
                width="36"
                height="40"
                viewBox="0 0 182 258"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M0 114V186V258H30V186H30.0024C30.0024 180.485 31.0887 175.024 33.1993 169.928C35.3099 164.833 38.4034 160.203 42.3032 156.303C46.203 152.403 50.8328 149.31 55.9282 147.199C61.0236 145.089 66.4848 144.002 72 144.002V144H79V114H72C62.5448 114 53.1822 115.862 44.4468 119.481C39.3265 121.602 34.4805 124.301 30 127.519V114H0Z"
                  fill="#000000"
                />
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M110 114L110 113.998C115.515 113.998 120.976 112.911 126.072 110.801C131.167 108.69 135.797 105.597 139.697 101.697C143.597 97.797 146.69 93.1672 148.801 88.0718C150.911 82.9764 151.998 77.5152 151.998 72C151.998 66.4848 150.911 61.0236 148.801 55.9282C146.69 50.8328 143.597 46.203 139.697 42.3032C135.797 38.4034 131.167 35.3099 126.072 33.1993C120.976 31.0887 115.515 30.0024 110 30.0024L110 0C119.455 0 128.818 1.86233 137.553 5.48067C146.289 9.09901 154.226 14.4025 160.912 21.0883C167.598 27.7741 172.901 35.7113 176.519 44.4468C180.138 53.1822 182 62.5448 182 72C182 81.4552 180.138 90.8178 176.519 99.5532C172.901 108.289 167.598 116.226 160.912 122.912C158.732 125.092 156.419 127.125 153.989 129C156.419 130.875 158.732 132.908 160.912 135.088C167.598 141.774 172.901 149.711 176.519 158.447C180.138 167.182 182 176.545 182 186V258H152V186H151.998C151.998 180.485 150.911 175.024 148.801 169.928C146.69 164.833 143.597 160.203 139.697 156.303C135.797 152.403 131.167 149.31 126.072 147.199C120.976 145.089 115.515 144.002 110 144.002L110 144H103V114H110Z"
                  fill="#E65F2B"
                />
                <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M0 30V72V90H30V72H30.0024C30.0024 66.4848 31.0887 61.0236 33.1993 55.9282C35.3099 50.8328 38.4034 46.203 42.3032 42.3032C46.203 38.4034 50.8328 35.3099 55.9282 33.1993C61.0236 31.0887 66.4848 30.0024 72 30.0024V30H110V0H72H30H0V30Z"
                  fill="#E65F2B"
                />
              </svg>
            </div>

            {/* Photo Logo - Only visible from 640px to 900px */}
            <div className="hidden sm:block md:block lg:hidden -mt-2">
              <img
                src={Recrumeta}
                alt="Recrumeta Logo"
                className="h-12 w-auto object-contain"
                style={{ display: 'var(--display-logo, "block")' }}
              />
            </div>

            {/* Add this script to hide the logo at 900px */}
            <style jsx>{`
              @media (min-width: 900px) {
                :root {
                  --display-logo: none;
                }
              }
            `}</style>
          </div>

          <div className="flex h-full ml-auto items-center">
            {/* Add a floating action button for status toggle */}
            <Box
              sx={{
                mr: 4,
                items: 'center',
                justifyContent: 'center',
                display: { xs: 'flex' },
                zIndex: theme.zIndex.drawer + 1,
              }}
            >
              <IconButton
                onClick={handleStatusToggle}
                sx={{
                  backgroundColor: isActive ? '#4CAF50' : '#E65F2B',
                  color: 'white',
                  '&:hover': {
                    backgroundColor: isActive ? '#3e8e41' : '#d15525',
                  },
                  width: '40px',
                  height: '40px',
                  boxShadow: '0 4px 8px rgba(0,0,0,0.2)',
                }}
              >
                {isActive ? (
                  <CheckCircleIcon fontSize="small" />
                ) : (
                  <DoNotDisturbIcon fontSize="small" />
                )}
              </IconButton>
            </Box>

            {/* Profile */}
            <div
              className={`right-4 bg-white w-auto h-12 flex items-center justify-start p-2 cursor-pointer ${isDropdownOpen ? "rounded-t-2xl" : "rounded-full"
                } relative transition-all duration-100 ring-1 ring-black ring-opacity-5 z-10`}
              ref={dropdownRef}
              onClick={toggleDropdown}
            >
              <div className="w-9 h-9 rounded-3xl bg-white overflow-hidden mr-2">
                <img
                  src={Profile}
                  alt="User Logo"
                  className="w-full h-full object-cover"
                />
              </div>
              <div>
                <p className="text-black text-xl font-medium">{username || "Guest"}</p>
              </div>
              <div className="px-1">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  height="22px"
                  viewBox="0 -960 960 960"
                  width="24px"
                  fill="#000000"
                  className={`transition-transform duration-300 ${isDropdownOpen ? "rotate-180" : ""
                    }`}
                >
                  <path d="M480-344 240-584l56-56 184 184 184-184 56 56-240 240Z" />
                </svg>
              </div>

              {/* Dropdown Menu */}
              <div
                className={`absolute right-0 w-full bg-white rounded-b-2xl shadow-lg ring-1 ring-black ring-opacity-5 z-10 transition-all duration-300 origin-top ${isDropdownOpen ? "opacity-100 scale-y-100" : "opacity-0 scale-y-0 pointer-events-none"
                  }`}
                style={{
                  top: '100%',
                  marginTop: '0px',
                  borderTopLeftRadius: '0',
                  borderTopRightRadius: '0',
                  transformOrigin: 'top',
                }}
              >
                <div
                  className="py-1"
                  role="menu"
                  aria-orientation="vertical"
                  aria-labelledby="user-menu"
                >
                  <a
                    href="#"
                    onClick={handleLogOut}
                    className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-200 rounded-b-xl"
                    role="menuitem"
                  >
                    <div className="flex items-center">
                      <svg width="26" height="26" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12.75 12L15.75 9M15.75 9L12.75 6M15.75 9H5.25M9.75 12V12.75C9.75 13.3467 9.51295 13.919 9.09099 14.341C8.66903 14.7629 8.09674 15 7.5 15H4.5C3.90326 15 3.33097 14.7629 2.90901 14.341C2.48705 13.919 2.25 13.3467 2.25 12.75V5.25C2.25 4.65326 2.48705 4.08097 2.90901 3.65901C3.33097 3.23705 3.90326 3 4.5 3H7.5C8.09674 3 8.66903 3.23705 9.09099 3.65901C9.51295 4.08097 9.75 4.65326 9.75 5.25V6" stroke="#E65F2B" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                      </svg>
                      <span className="ml-3 text-[18px]">Logout</span>
                    </div>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </AppBar>

      <Drawer
        variant="permanent"
        open={open}
        sx={drawerStyle}
      >
        <Box sx={drawerHeaderStyle} >
          {open ? (
            <Typography
              variant="subtitle1"
              sx={{
                fontWeight: "bold",
                ml: 1,
              }}
            >
              <svg
                width="220"
                height="52"
                viewBox="0 0 1600 400"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M60 185.674V328H90V256.837H90.0024C90.0024 251.386 91.0887 245.988 93.1993 240.952C95.3099 235.916 98.4034 231.34 102.303 227.486C106.203 223.631 110.833 220.574 115.928 218.488C121.024 216.402 126.485 215.328 132 215.328V215.325H139V185.674H132C122.545 185.674 113.182 187.515 104.447 191.091C99.3265 193.187 94.4805 195.856 90 199.036V185.674H60Z"
                  fill="white"
                />
                <path
                  d="M220.912 194.482C218.732 196.637 216.419 198.646 213.989 200.5C216.419 202.354 218.732 204.363 220.912 206.518C227.598 213.126 232.901 220.971 236.519 229.604C240.138 238.238 242 247.492 242 256.837V328H212V256.837H211.998C211.998 251.386 210.911 245.988 208.801 240.952C206.69 235.916 203.597 231.34 199.697 227.486C195.797 223.631 191.167 220.574 186.072 218.488C180.976 216.402 175.515 215.328 170 215.328V215.326H163V185.674H170V185.672C175.515 185.672 180.976 184.598 186.072 182.512C191.167 180.426 195.797 177.369 199.697 173.514C203.597 169.66 206.69 165.084 208.801 160.048C210.911 155.012 211.998 149.614 211.998 144.163C211.998 138.712 210.911 133.314 208.801 128.278C206.69 123.242 203.597 118.666 199.697 114.811C195.797 110.957 191.167 107.899 186.072 105.813C180.976 103.727 175.515 102.654 170 102.654V73C179.455 73 188.818 74.8407 197.553 78.4169C206.289 81.9932 214.226 87.235 220.912 93.8431C227.598 100.451 232.901 108.296 236.519 116.93C240.138 125.564 242 134.818 242 144.163C242 153.508 240.138 162.762 236.519 171.396C232.901 180.029 227.598 187.874 220.912 194.482Z"
                  fill="#E65F2B"
                />
                <path
                  d="M60 161.953H90V144.163H90.0024C90.0024 138.712 91.0887 133.314 93.1993 128.278C95.3099 123.242 98.4034 118.666 102.303 114.811C106.203 110.957 110.833 107.899 115.928 105.813C121.024 103.727 126.485 102.654 132 102.654V102.651H170V73H60V161.953Z"
                  fill="#E65F2B"
                />
                <path
                  d="M343.683 327.82C328.257 327.82 314.737 324.787 303.123 318.72C291.683 312.48 282.757 303.987 276.343 293.24C270.103 282.493 266.983 270.273 266.983 256.58C266.983 242.713 270.017 230.493 276.083 219.92C282.323 209.173 290.817 200.767 301.563 194.7C312.483 188.633 324.877 185.6 338.743 185.6C352.263 185.6 364.31 188.547 374.883 194.44C385.457 200.333 393.777 208.653 399.843 219.4C405.91 230.147 408.943 242.8 408.943 257.36C408.943 258.747 408.857 260.307 408.683 262.04C408.683 263.773 408.597 265.42 408.423 266.98H292.723V245.4H391.263L378.523 252.16C378.697 244.187 377.05 237.167 373.583 231.1C370.117 225.033 365.35 220.267 359.283 216.8C353.39 213.333 346.543 211.6 338.743 211.6C330.77 211.6 323.75 213.333 317.683 216.8C311.79 220.267 307.11 225.12 303.643 231.36C300.35 237.427 298.703 244.62 298.703 252.94V258.14C298.703 266.46 300.61 273.827 304.423 280.24C308.237 286.653 313.61 291.593 320.543 295.06C327.477 298.527 335.45 300.26 344.463 300.26C352.263 300.26 359.283 299.047 365.523 296.62C371.763 294.193 377.31 290.38 382.163 285.18L399.583 305.2C393.343 312.48 385.457 318.113 375.923 322.1C366.563 325.913 355.817 327.82 343.683 327.82Z"
                  fill="white"
                />
                <path
                  d="M503.862 327.82C489.302 327.82 476.302 324.787 464.862 318.72C453.595 312.48 444.755 303.987 438.342 293.24C431.928 282.493 428.722 270.273 428.722 256.58C428.722 242.713 431.928 230.493 438.342 219.92C444.755 209.173 453.595 200.767 464.862 194.7C476.302 188.633 489.302 185.6 503.862 185.6C517.382 185.6 529.255 188.373 539.482 193.92C549.882 199.293 557.768 207.267 563.142 217.84L538.182 232.4C534.022 225.813 528.908 220.96 522.842 217.84C516.948 214.72 510.535 213.16 503.602 213.16C495.628 213.16 488.435 214.893 482.022 218.36C475.608 221.827 470.582 226.853 466.942 233.44C463.302 239.853 461.482 247.567 461.482 256.58C461.482 265.593 463.302 273.393 466.942 279.98C470.582 286.393 475.608 291.333 482.022 294.8C488.435 298.267 495.628 300 503.602 300C510.535 300 516.948 298.44 522.842 295.32C528.908 292.2 534.022 287.347 538.182 280.76L563.142 295.32C557.768 305.72 549.882 313.78 539.482 319.5C529.255 325.047 517.382 327.82 503.862 327.82Z"
                  fill="white"
                />
                <path
                  d="M591.236 326V187.16H622.176V225.38L618.536 214.2C622.696 204.84 629.196 197.733 638.036 192.88C647.049 188.027 658.229 185.6 671.576 185.6V216.54C670.189 216.193 668.889 216.02 667.676 216.02C666.463 215.847 665.249 215.76 664.036 215.76C651.729 215.76 641.936 219.4 634.656 226.68C627.376 233.787 623.736 244.447 623.736 258.66V326H591.236Z"
                  fill="white"
                />
                <path
                  d="M759.176 327.82C747.389 327.82 736.989 325.653 727.976 321.32C718.962 316.813 711.942 310.053 706.916 301.04C701.889 291.853 699.376 280.327 699.376 266.46V187.16H731.876V262.04C731.876 274.52 734.649 283.88 740.196 290.12C745.916 296.187 753.976 299.22 764.376 299.22C772.002 299.22 778.589 297.66 784.136 294.54C789.856 291.42 794.276 286.74 797.396 280.5C800.689 274.26 802.336 266.547 802.336 257.36V187.16H834.836V326H803.896V288.56L809.356 300C804.676 309.013 797.829 315.947 788.816 320.8C779.802 325.48 769.922 327.82 759.176 327.82Z"
                  fill="white"
                />
                <path
                  d="M1052.63 185.6C1063.72 185.6 1073.51 187.767 1082.01 192.1C1090.67 196.433 1097.43 203.107 1102.29 212.12C1107.14 220.96 1109.57 232.4 1109.57 246.44V326H1077.07V250.6C1077.07 238.293 1074.38 229.107 1069.01 223.04C1063.63 216.973 1055.92 213.94 1045.87 213.94C1038.76 213.94 1032.43 215.5 1026.89 218.62C1021.51 221.74 1017.27 226.333 1014.15 232.4C1011.2 238.467 1009.73 246.18 1009.73 255.54V326H977.228V250.6C977.228 238.293 974.542 229.107 969.168 223.04C963.795 216.973 956.082 213.94 946.028 213.94C938.922 213.94 932.595 215.5 927.048 218.62C921.675 221.74 917.428 226.333 914.308 232.4C911.362 238.467 909.888 246.18 909.888 255.54V326H877.388V187.16H908.328V224.08L902.868 213.16C907.548 204.147 914.308 197.3 923.148 192.62C932.162 187.94 942.388 185.6 953.828 185.6C966.828 185.6 978.095 188.807 987.628 195.22C997.335 201.633 1003.75 211.34 1006.87 224.34L994.128 219.92C998.635 209.52 1006.09 201.2 1016.49 194.96C1026.89 188.72 1038.93 185.6 1052.63 185.6Z"
                  fill="white"
                />
                <path
                  d="M1216.61 327.82C1201.19 327.82 1187.67 324.787 1176.05 318.72C1164.61 312.48 1155.69 303.987 1149.27 293.24C1143.03 282.493 1139.91 270.273 1139.91 256.58C1139.91 242.713 1142.95 230.493 1149.01 219.92C1155.25 209.173 1163.75 200.767 1174.49 194.7C1185.41 188.633 1197.81 185.6 1211.67 185.6C1225.19 185.6 1237.24 188.547 1247.81 194.44C1258.39 200.333 1266.71 208.653 1272.77 219.4C1278.84 230.147 1281.87 242.8 1281.87 257.36C1281.87 258.747 1281.79 260.307 1281.61 262.04C1281.61 263.773 1281.53 265.42 1281.35 266.98H1165.65V245.4H1264.19L1251.45 252.16C1251.63 244.187 1249.98 237.167 1246.51 231.1C1243.05 225.033 1238.28 220.267 1232.21 216.8C1226.32 213.333 1219.47 211.6 1211.67 211.6C1203.7 211.6 1196.68 213.333 1190.61 216.8C1184.72 220.267 1180.04 225.12 1176.57 231.36C1173.28 237.427 1171.63 244.62 1171.63 252.94V258.14C1171.63 266.46 1173.54 273.827 1177.35 280.24C1181.17 286.653 1186.54 291.593 1193.47 295.06C1200.41 298.527 1208.38 300.26 1217.39 300.26C1225.19 300.26 1232.21 299.047 1238.45 296.62C1244.69 294.193 1250.24 290.38 1255.09 285.18L1272.51 305.2C1266.27 312.48 1258.39 318.113 1248.85 322.1C1239.49 325.913 1228.75 327.82 1216.61 327.82Z"
                  fill="white"
                />
                <path
                  d="M1365.35 327.82C1350.1 327.82 1338.31 323.92 1329.99 316.12C1321.67 308.147 1317.51 296.447 1317.51 281.02V156.48H1350.01V280.24C1350.01 286.827 1351.66 291.94 1354.95 295.58C1358.42 299.22 1363.18 301.04 1369.25 301.04C1376.53 301.04 1382.6 299.133 1387.45 295.32L1396.55 318.46C1392.74 321.58 1388.06 323.92 1382.51 325.48C1376.96 327.04 1371.24 327.82 1365.35 327.82ZM1294.63 214.2V188.2H1387.19V214.2H1294.63Z"
                  fill="white"
                />
                <path
                  d="M1508.83 326V297.92L1507.01 291.94V242.8C1507.01 233.267 1504.15 225.9 1498.43 220.7C1492.71 215.327 1484.04 212.64 1472.43 212.64C1464.63 212.64 1456.91 213.853 1449.29 216.28C1441.83 218.707 1435.51 222.087 1430.31 226.42L1417.57 202.76C1425.02 197.04 1433.86 192.793 1444.09 190.02C1454.49 187.073 1465.23 185.6 1476.33 185.6C1496.43 185.6 1511.95 190.453 1522.87 200.16C1533.96 209.693 1539.51 224.513 1539.51 244.62V326H1508.83ZM1465.15 327.82C1454.75 327.82 1445.65 326.087 1437.85 322.62C1430.05 318.98 1423.98 314.04 1419.65 307.8C1415.49 301.387 1413.41 294.193 1413.41 286.22C1413.41 278.42 1415.23 271.4 1418.87 265.16C1422.68 258.92 1428.83 253.98 1437.33 250.34C1445.82 246.7 1457.09 244.88 1471.13 244.88H1511.43V266.46H1473.47C1462.37 266.46 1454.92 268.28 1451.11 271.92C1447.29 275.387 1445.39 279.72 1445.39 284.92C1445.39 290.813 1447.73 295.493 1452.41 298.96C1457.09 302.427 1463.59 304.16 1471.91 304.16C1479.88 304.16 1486.99 302.34 1493.23 298.7C1499.64 295.06 1504.23 289.687 1507.01 282.58L1512.47 302.08C1509.35 310.227 1503.71 316.553 1495.57 321.06C1487.59 325.567 1477.45 327.82 1465.15 327.82Z"
                  fill="white"
                />
              </svg>
            </Typography>
          ) : (
            <Typography
              variant="caption"
              sx={{
                fontWeight: "bold",
                whiteSpace: "nowrap",
              }}
            >
              <svg
                width="30"
                height="34"
                viewBox="0 0 182 258"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M0 114V186V258H30V186H30.0024C30.0024 180.485 31.0887 175.024 33.1993 169.928C35.3099 164.833 38.4034 160.203 42.3032 156.303C46.203 152.403 50.8328 149.31 55.9282 147.199C61.0236 145.089 66.4848 144.002 72 144.002V144H79V114H72C62.5448 114 53.1822 115.862 44.4468 119.481C39.3265 121.602 34.4805 124.301 30 127.519V114H0Z"
                  fill="white"
                />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M110 114L110 113.998C115.515 113.998 120.976 112.911 126.072 110.801C131.167 108.69 135.797 105.597 139.697 101.697C143.597 97.797 146.69 93.1672 148.801 88.0718C150.911 82.9764 151.998 77.5152 151.998 72C151.998 66.4848 150.911 61.0236 148.801 55.9282C146.69 50.8328 143.597 46.203 139.697 42.3032C135.797 38.4034 131.167 35.3099 126.072 33.1993C120.976 31.0887 115.515 30.0024 110 30.0024L110 0C119.455 0 128.818 1.86233 137.553 5.48067C146.289 9.09901 154.226 14.4025 160.912 21.0883C167.598 27.7741 172.901 35.7113 176.519 44.4468C180.138 53.1822 182 62.5448 182 72C182 81.4552 180.138 90.8178 176.519 99.5532C172.901 108.289 167.598 116.226 160.912 122.912C158.732 125.092 156.419 127.125 153.989 129C156.419 130.875 158.732 132.908 160.912 135.088C167.598 141.774 172.901 149.711 176.519 158.447C180.138 167.182 182 176.545 182 186V258H152V186H151.998C151.998 180.485 150.911 175.024 148.801 169.928C146.69 164.833 143.597 160.203 139.697 156.303C135.797 152.403 131.167 149.31 126.072 147.199C120.976 145.089 115.515 144.002 110 144.002L110 144H103V114H110Z"
                  fill="#E65F2B"
                />
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M0 30V72V90H30V72H30.0024C30.0024 66.4848 31.0887 61.0236 33.1993 55.9282C35.3099 50.8328 38.4034 46.203 42.3032 42.3032C46.203 38.4034 50.8328 35.3099 55.9282 33.1993C61.0236 31.0887 66.4848 30.0024 72 30.0024V30H110V0H72H30H0V30Z"
                  fill="#E65F2B"
                />
              </svg>
            </Typography>
          )}
        </Box>

        {/* <DrawerHeader>
          <div className="flex items-center justify-around h-full w-full">
            <div>
              <h1 className="text-2xl text-[white]">Hi, Ashok</h1>
            </div>
            <div>
              <IconButton onClick={handleDrawerClose}>
                {theme.direction === "rtl" ? (
                  <CustomChevronRightIcon />
                ) : (
                  <CustomChevronLeftIcon color="white000" text="white000" />
                )}
              </IconButton>
            </div>
          </div>
        </DrawerHeader> */}
        <Divider />

        <List sx={{ border: "none", top: "40px" }}>
          {navItems.map((items) => (
            <ListItem
              key={items.text}
              disablePadding
              sx={{

                borderRadius: "25px",
                overflow: "hidden",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
              }}
              className={`${location.pathname.startsWith(items.link)
                ? "bg-[#FFFFFF]" : ""
                } flex items-center justify-center `}
            >
              <ListItemButton
                sx={[
                  { minHeight: 48, px: 3 },
                  open
                    ? { justifyContent: "initial" }
                    : { justifyContent: "center" },
                ]}
                onClick={() => navigate(items.link)}
              >
                <ListItemIcon
                  sx={[
                    { minWidth: 0, justifyContent: "center" },
                    open ? { mr: 3 } : { mr: "auto" },
                  ]}
                  className=""
                >
                  {location.pathname.startsWith(items.link)
                    ? items.icon2
                    : items.icon}
                </ListItemIcon>
                <ListItemText
                  primary={items.text}
                  className={`${location.pathname.startsWith(items.link)
                    ? "text-[#E65F2B] font-semibold "
                    : "text-white"
                    } ${open ? "opacity-100" : "opacity-0"}`}
                  sx={{
                    "& .MuiTypography-root": {
                      fontWeight: location.pathname.startsWith(items.link)
                        ? 600
                        : "normal", // Font weight for active route
                    },
                  }}
                />
              </ListItemButton>
            </ListItem>
          ))}
        </List>
      </Drawer>

      <Box
        sx={{
          position: "fixed",
          left: open ? drawerWidth - 12 : theme.spacing(6),
          top: "55px",
          zIndex: theme.zIndex.drawer + 2,
          transition: theme.transitions.create(["left"], {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.enteringScreen,
          }),
          display: { xs: 'none', md: 'block' } // Only show on desktop
        }}>
        <IconButton
          onClick={open ? handleDrawerClose : handleDrawerOpen}
          sx={{
            backgroundColor: "white",
            boxShadow: "0px 2px 4px rgba(0,0,0,0.1)",
            padding: "3px",
            "&:hover": {
              backgroundColor: "#f5f5f5",
            },
          }}
        >
          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}
        </IconButton>
      </Box>

      <Box component="main" sx={{
        width: '100%',
        height: '100%',
        pb: { xs: '70px', md: 0 }, // Add padding for mobile bottom navigation
        pl: { xs: 0, md: open ? 0 : 0 } // Adjust padding based on drawer state
      }}
        className="w-full h-full"
      >
        <DrawerHeader />
        <Outlet />
      </Box>

      {/* Mobile bottom navigation */}
      <Box
        sx={{
          position: 'fixed',
          bottom: 0,
          left: 0,
          right: 0,
          bgcolor: '#000000',
          display: { xs: 'flex', md: 'none' }, // Show on mobile and small tablets, hide on larger screens
          zIndex: theme.zIndex.drawer + 1,
          boxShadow: '0px -2px 10px rgba(0, 0, 0, 0.1)',
          px: 1,
        }}
      >
        <Box sx={{ display: 'flex', width: '100%', justifyContent: 'space-around', py: 1.5 }}>
          {navItems.map((item) => (
            <Box
              key={item.text}
              onClick={() => navigate(item.link)}
              sx={{
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                justifyContent: 'center',
                padding: '4px 0',
                minWidth: 0,
                flex: '1 1 0%',
                color: location.pathname.startsWith(item.link) ? '#E65F2B' : 'white',
                cursor: 'pointer',
              }}
            >
              {location.pathname.startsWith(item.link) ? item.icon2 : item.icon}
              <Typography
                variant="caption"
                noWrap
                sx={{
                  mt: 0.5,
                  fontSize: { xs: '10px', sm: '12px' },
                  fontWeight: location.pathname.startsWith(item.link) ? 600 : 400,
                  width: '100%',
                  textAlign: 'center',
                  px: 0.5,
                }}
              >
                {item.text}
              </Typography>
            </Box>
          ))}
        </Box>
      </Box>

      {/* Dialog */}
      <StatusDialog
        open={confirmDialogOpen}
        onClose={handleCancelInactive}
        aria-labelledby="alert-dialog-title"
        aria-describedby="alert-dialog-description"
        BackdropProps={{
          sx: { backgroundColor: "rgba(0, 0, 0, 0.40)" },
        }}
      >
        <DialogTitle sx={{ m: 0, p: 2, borderBottom: 'none' }}>
          <h1 className="font-bold text-[#E65F2B] text-lg text-start">Confirm Status Change</h1>
          <IconButton
            aria-label="close"
            onClick={handleCancelInactive}
            sx={{
              position: "absolute",
              right: 8,
              top: 8,
              color: (theme) => theme.palette.grey[500],
            }}
          >
            <CloseIcon />
          </IconButton>
        </DialogTitle>
        <DialogContent sx={{ borderTop: 'none', borderBottom: 'none' }}>
          <DialogContentText id="alert-dialog-description">
            Changing your status to inactive means you won't be assigned any new interviews.
            Are you sure you want to become inactive?
          </DialogContentText>
        </DialogContent>
        <DialogActions sx={{ borderTop: 'none' }} className="p-4 mb-2 mr-2">
          <button
            onClick={handleCancelInactive}
            className="px-4 py-2 rounded-full text-gray-600 hover:bg-gray-100"
          >
            Cancel
          </button>
          <button
            onClick={handleConfirmInactive}
            className="px-4 py-2 rounded-full bg-[#E65F2B] text-white hover:bg-[#d45525]"
          >
            Confirm Inactive Status
          </button>
        </DialogActions>
      </StatusDialog>

      <VisitorIndicator />
    </Box>
  )
}

export { NavigationLayout as InterviewerNavigationLayout };
